const { readdirSync, statSync, writeFile } = require('fs');
const { join, resolve } = require('path');

const generateEndpoints = (on, config) => {

  const blackList = [
    '/dev-404-page/',
    '/404.html/',
    '/offline-plugin-app-shell-fallback/',
  ];

  const exploreDirectory = (currentDirPath, callback) => {
    readdirSync(currentDirPath).forEach(function (name) {
      const filePath = join(currentDirPath, name);
      const file = statSync(filePath);
      if (file.isFile()) {
        callback(filePath);
      } else if (file.isDirectory()) {
        exploreDirectory(filePath, callback);
      }
    });
  };

  const pageData = resolve('public/page-data');
  const endpointsToFixture = [`\n  "/"`];
  const endpoints = ['/'];

  exploreDirectory(pageData, filePath => {
    if (filePath.includes('page-data.json')) {
      const url = filePath
        .split('page-data')[1]
        .split('page-data')[0]
        .replace(/\\/g, '/');
      if (url !== '/index/' && !blackList.includes(url)) {
        endpointsToFixture.push(`\n  "${url}"`);
        endpoints.push(url);
      }
    }
  });

  const text = `[${endpointsToFixture.sort()}\n  ]`;

  writeFile('cypress/fixtures/endpoints.json', text, err => {
    if (err) throw err;
  });

  config.env.endpoints = endpoints;
};

exports.generateEndpoints = generateEndpoints;
