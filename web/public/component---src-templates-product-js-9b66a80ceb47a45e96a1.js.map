{"version":3,"file":"component---src-templates-product-js-9b66a80ceb47a45e96a1.js","mappings":"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","sources":["webpack://yateractives/./src/utils/utils.js","webpack://yateractives/./src/templates/Product.js"],"sourcesContent":["// Utility Functions for steel-template-gatsby\n\n//---------------------------------------------------------------------------------------//\n// createString()\n// create the string required by snipcart to allow price changes based on option chosen\n// eg. S[+-1]|M[+0]|L[+1]|XL[+-1]\n//---------------------------------------------------------------------------------------//\n\nconst createString = (values, selected) => {\n  return values\n    .map((option) => {\n      const price =\n        option.price >= 0 ? `[+${option.price - selected.price}]` : `[${option.price}]`;\n      return `${option.title}${price}`;\n    })\n    .join('|');\n};\n\n//----------------------------------------------//\n//  isDigital()\n//  returns first digital variant\n//----------------------------------------------//\n\nconst isDigital = (elem) => elem.digital === true;\n\n\n\nexport { createString, isDigital }","import React, { useState } from 'react'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { getGatsbyImageData } from 'gatsby-source-sanity'\nimport { graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport Helmet from 'react-helmet'\nimport { createString, isDigital } from '../utils/utils'\nimport Layout from '../components/layout'\nimport { siteMetadata } from '../../gatsby-config'\nimport steel from '../steel-config'\n\nconst Col = styled.div`\n\n\n@media only screen and (min-width: 600px) {\n\tpadding-top: 40px;\n \n   }\n`\nconst ProductGrid = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: repeat(auto-fill, minmax(500px, 1fr));\n\talign-items: center;\n\twidth: max-content;\n\tmargin: 0 auto;\n\tfont-family: var(--bodyFont);\n\t& > div {\n\t\tmargin: 1rem;\n\t\twidth: 400px;\n\t\tmax-width: 80vw;\n\t\tmargin: 1rem;\n\t}\n\t& > div > label {\n\t\tmargin-left: .5rem;\n\t}\n\t@media screen and (min-width: 768px) {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\twidth: 100%;\n\t}\n`;\nconst ImgCon = styled.div`\n\n`\nconst Heading = styled.h1`\n\tfont-weight: 900;\n\tfont-size: 1.5em;\n\tmargin: 20px 0;\n\tfont-family: var(--subheadingFont);\n\tfont-size: var(--subheadingSize);\n\tcolor: var(--subheadingColor);\n`;\nconst ImgStyled = styled(GatsbyImage)`\n  width: 350px;\n  height: 350px;\n  max-width: 80vw;\n  object-fit: contain;\n\n  \n`;\nconst Price = styled.p`\n\tmargin-bottom: 10px;\n\tpadding: 10px;\n\tfont-weight: 700;\n\tfont-family: var(--bodyFont);\n\tcolor: var(--bodyColor);\n\tfont-size: 2rem;\n`;\nconst Description = styled.p`\n\tpadding: 7px;\n\tfont-family: var(--bodyFont);\n\tfont-size: var(--bodySize);\n\tcolor: var(--bodyColor);\n\t&:last-of-type {\n\t\tmargin-bottom: 25px;\n\t}\n`;\nconst Dropdown = styled.select`\n\tposition: relative;\n\tdisplay: block;\n\tpadding: 10px;\n\tmargin: 10px 0;\n\tfont-weight: 700;\n\tfont-family: var(--bodyFont);\n\tbackground: var(--bg);\n\tborder: var(--border);\n\tborder-radius: var(--borderRadius);\n\toutline: none;\n\t-webkit-appearance: none;\n\t-moz-appearance: none;\n\tappearance: none;\n\tbackground: transparent;\n\tbackground-image: url(\"data:image/svg+xml;utf8,<svg fill='black' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>\");\n\tbackground-repeat: no-repeat;\n\tbackground-position-x: 100%;\n\tbackground-position-y: 5px;\n\tcolor: var(--fontColor);\n\t&:hover {\n\t\tcursor: pointer;\n\t\ttransform: translateY(-2px);\n\t}\n\t&:hover > option {\n\t\tcolor: var(--fontColor);\n\t}\n`;\nconst InputWrap = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\t& > * {\n\t\twidth: 150px;\n\t\tmargin: .5rem;\n\t}\n`;\nconst DropdownOption = styled.option`\n\tpadding: 20px;\n\tbackground: var(--bg);\n\tcolor: var(--bodyColor);\n\tfont-family: var(--bodyFont);\n\tfont-size: var(--bodySize);\n\tfont-weight: 700;\n\tborder: none;\n\toutline: none;\n`;\nconst BuyButton = styled.button`\n\t&:hover {\n\t\ttransform: rotate(2deg);\n\t}\n`;\n\nconst Product = ({ data: { item }}) => {\n\tconst variants = item.variants\n  const options = variants.map(e => e.title)\n\n  const [selected, setSelected] = useState(variants[0])\n\n  const imageData = getGatsbyImageData(variants[0].images[0].asset.id, {maxWidth: 600}, steel.sanity)\n\n\tconst digitalVersion = variants.findIndex(isDigital)\n\n  return (\n\t\t<>\n\t\t\t<Helmet \n\t\t\t\ttitle={steel.title}\n\t\t\t\thtmlAttributes={{\n\t\t\t\t\tlang: 'en',\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Layout>\n\t\t\t\t<ProductGrid>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Heading>{item.title}</Heading>\n\t\t\t\t\t\t<ImgCon>\n\t\t\t\t\t\t<ImgStyled image={imageData} alt={item.title} key={item.id}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ImgCon>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Price>${selected.price}</Price>\n\t\t\t\t\t\t{item.body.en.map(({children}) => <Description key={children._key}>{children[0].text}</Description>)}\n\t\t\t\t\t\t<InputWrap>\n\t\t\t\t\t\t\t{item.variants.length > 1 && \n\t\t\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\t\t\taria-label={item.variant_type}\n\t\t\t\t\t\t\t\t\tid={item.title}\n\t\t\t\t\t\t\t\t\tonChange={(e) => setSelected(variants[options.indexOf(e.target.value)])}\n\t\t\t\t\t\t\t\t\tvalue={selected.title}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{item.variants.map((option) => (\n\t\t\t\t\t\t\t\t\t\t<DropdownOption key={option._key}>{option.title}</DropdownOption>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</Dropdown>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<BuyButton\n\t\t\t\t\t\t\t\tclassName=\"snipcart-add-item\"\n\t\t\t\t\t\t\t\tdata-item-id={item.id}\n\t\t\t\t\t\t\t\tdata-item-price={selected.price}\n\t\t\t\t\t\t\t\tdata-item-name={item.title}\n\t\t\t\t\t\t\t\tdata-item-description={item.blurb.en}\n\t\t\t\t\t\t\t\tdata-item-image={variants[0].images[0].asset.url}\n\t\t\t\t\t\t\t\tdata-item-url={`${siteMetadata.siteUrl}/${item.slug.current}`}\n\t\t\t\t\t\t\t\tdata-item-custom1-name={variants.length > 1 ? item.variant_type : ''}\n\t\t\t\t\t\t\t\tdata-item-custom1-options={variants.length > 1 ? createString(variants, selected) : ''}\n\t\t\t\t\t\t\t\tdata-item-custom1-value={selected.title}\n\t\t\t\t\t\t\t\tdata-item-file-guid={digitalVersion !== -1 ? variants[digitalVersion].guid : ''}\n\t\t\t\t\t\t\t\tdata-item-weight={digitalVersion === -1 ? variants[item.variants.indexOf(selected)].grams : 0}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tAdd to cart\n\t\t\t\t\t\t\t</BuyButton>\n\t\t\t\t\t\t</InputWrap>\n\t\t\t\t\t</Col>\n\t\t\t\t</ProductGrid>\n\t\t\t</Layout>\n\t\t</>\n  )\n}\n\nexport default Product\n\nexport const pageQuery = graphql`\n\tquery ItemBySlug($slug: String!) {\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\t\titem: sanityProduct(slug: { current: { eq: $slug } }) {\n\t\t\tid\n\t\t\ttitle\n\t\t\tslug {\n\t\t\t\tcurrent\n\t\t\t}\n\t\t\tblurb {\n\t\t\t\ten\n\t\t\t}\n\t\t\tbody {\n\t\t\t\ten {\n\t\t\t\t\t_key\n\t\t\t\t\tchildren {\n\t\t\t\t\t\t_key\n\t\t\t\t\t\ttext\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvariants {\n\t\t\t\t_key\n\t\t\t\ttitle\n\t\t\t\tgrams\n\t\t\t\tprice\n\t\t\t\tsku\n\t\t\t\ttaxable\n\t\t\t\tdigital\n\t\t\t\tguid\n\t\t\t\timages {\n\t\t\t\t\tasset {\n\t\t\t\t\t\turl\n\t\t\t\t\t\tassetId\n\t\t\t\t\t\tid\n\t\t\t\t\t\tdescription\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvariant_type\n\t\t}\n\t}\n`;\n"],"names":["createString","values","selected","map","option","price","title","join","isDigital","elem","digital","Col","styled","ProductGrid","ImgCon","Heading","ImgStyled","GatsbyImage","Price","Description","Dropdown","InputWrap","DropdownOption","BuyButton","item","data","variants","options","e","useState","setSelected","imageData","getGatsbyImageData","images","asset","id","maxWidth","steel","digitalVersion","findIndex","Helmet","htmlAttributes","lang","image","alt","key","body","en","children","_key","text","length","variant_type","onChange","indexOf","target","value","className","blurb","url","siteMetadata","slug","current","guid","grams"],"sourceRoot":""}